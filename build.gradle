plugins {
    id 'java'                                      // deja prezent
    id 'application'                               // pentru task-ul run/dist
    id 'org.openjfx.javafxplugin' version '0.1.0'  // modul-path JavaFX
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

tasks.named('run') {
    jvmArgs '--enable-native-access=javafx.graphics'
}
java {

    // Use the JDK available in the container. The original setup required
    // Java 24 which is not installed here and causes Gradle to fail when
    // resolving the toolchain. Java 21 is available, so we configure the
    // toolchain accordingly.
    toolchain { languageVersion = JavaLanguageVersion.of(21) }
}

application {

    mainClass = 'org.example.Main'
}

// Use JavaFX libraries matching the JDK in this environment. JavaFX 24
// requires a newer JDK (major version 66) which is not available. Using
// JavaFX 21 ensures compatibility with JDK 21.
javafx {
    version = '21'
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

dependencies {

    implementation 'org.apache.poi:poi:5.4.1'
    implementation 'org.apache.poi:poi-ooxml:5.4.1'
    implementation 'mysql:mysql-connector-java:8.0.33'


    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}
